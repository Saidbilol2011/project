version: '3.10'
services:
  db:
    container_name: PostgresDB
    image: postgres:16.4-alpine3.20
    ports:
      - "5432:5432"
    expose:
      - 5432
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5

  backend:
    container_name: backend-api
    build: ./Api
    ports:
      - "9000:9000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: frontend
    build: ./src
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        exec python manage.py runserver 0.0.0.0:8000
      "

volumes:
  postgres_data:
